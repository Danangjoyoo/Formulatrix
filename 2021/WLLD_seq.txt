FindSurface( uint index, double lowestTargetPosition, out double surfacePos )
1. if isSimulated: surfacePos = 0
2. lowestTargePos -= collCompressionTolerances
3. setFreq
4. delay Freq
5. ClearZHardBrakeAbortConfigAndFaults -> falsing every abort
	a. pipetteAborts[pipeteAbortType.PipetteStemHardBrake][index].init()
	b. setAbortConfig(PipetteAbortType.PipetteStemHardbrake)
	c. ClearTriggeredInput(PipetteAbortType.PipetteStemHardbrake)
6. ClearValveInAbort -> falsing every abort
	a. AbortOnTipCollision2
	b. AbortOnStemCurrent
	c. AbortOnSyringePressure2
	d. SetAbortConfig(valInConfigs)
	e. CkearTruggeredUBoyts(PipetteAbortType.ValveIn)
7. SetAbort
	a. SetAbortThres
		SetAbortThreshold( index, AbortAnalogInput.CollisionSensor2, _pipette.ReadAnalogSensor( index, AnalogSensor.Collision ) - _wlldConfigs[index].AbortCollisionThreshold );
	    SetAbortThreshold( index, AbortAnalogInput.LiquidLevelSensor, _pipette.ReadAnalogSensor( index, AnalogSensor.Dllt ) - _wlldConfigs[index].AbortResistanceThreshold );
	    SetAbortThreshold( index, AbortAnalogInput.StemCurrentSensor, _wlldConfigs[index].CurrentSensorThreshold );
    b. stemHardConfig
	    _stemHardBrakeConfigs[index].AbortDelay = 0;
	    _stemHardBrakeConfigs[index].TriggerOnAll = false;
	    _stemHardBrakeConfigs[index].AbortInputFlag.AbortOnTipCollision2 = true;
	    _stemHardBrakeConfigs[index].AbortInputFlag.AbortOnLiquidLevelSensor = true;
	    _stemHardBrakeConfigs[index].AbortInputFlag.AbortOnStemCurrent = true;
	    _pipette.SetAbortConfig( index, _stemHardBrakeConfigs[index] );
	c. valveInConfig
		_valveInConfigs[index].AbortDelay = 0;
		_valveInConfigs[index].TriggerOnAll = false;
		_valveInConfigs[index].AbortInputFlag.AbortOnTipCollision2 = true;
		_valveInConfigs[index].AbortInputFlag.AbortOnLiquidLevelSensor = true;
		_valveInConfigs[index].AbortInputFlag.AbortOnStemCurrent = true;
		_pipette.SetAbortConfig( index, _valveInConfigs[index] );
7. Move Z
8. if noError: waitEOM
9. abortFlag hardz (H) (getTriggeredInput)
	if abortFlag.abortOnTipCollision (H): collision triggered
	elif abortOnLiquidLevel (H): liquidSurfaceFound -> getPos
	elif AbortOnStemCurrent (H): OverCurrent
	else travellimitreached
10. stopAndSave
11. ClearZHardBrakeAbortConfig
12. clearValveInConfig
	_valveInConfigs[index].AbortInputFlag.AbortOnTipCollision2 = false;
	_valveInConfigs[index].AbortInputFlag.AbortOnLiquidLevelSensor = false;
	_valveInConfigs[index].AbortInputFlag.AbortOnStemCurrent = false;
	_pipette.SetAbortConfig( index, _valveInConfigs[index] );
	_pipette.ClearTriggeredInputs( index, PipetteAbortType.ValveIn );
13. getPos